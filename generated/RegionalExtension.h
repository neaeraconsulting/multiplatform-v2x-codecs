/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "Common"
 * 	found in "asn/J2735-Common-2024-rel-v1.1.2.asn"
 * 	`asn1c -fcompound-names -fincludes-quoted -fno-include-deps -no-gen-BER -no-gen-OER -no-gen-APER -no-gen-print -no-gen-random-fill -pdu=all -D generated`
 */

#ifndef	_RegionalExtension_H_
#define	_RegionalExtension_H_


#include "asn_application.h"

/* Including external dependencies */
#include "RegionId.h"
#include "ANY.h"
#include "asn_ioc.h"
#include "OPEN_TYPE.h"
#include "constr_CHOICE.h"
#include "constr_SEQUENCE.h"
#include "LaneDataAttribute-addGrpB.h"
#include "NodeOffsetPointXY-addGrpB.h"
#include "Position3D-addGrpB.h"
#include "Position3D-addGrpC.h"
#include "MapData-addGrpC.h"
#include "RestrictionUserType-addGrpC.h"
#include "ConnectionManeuverAssist-addGrpC.h"
#include "IntersectionState-addGrpC.h"
#include "MovementEvent-addGrpB.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum Reg_BasicSafetyMessage__regExtValue_PR {
	Reg_BasicSafetyMessage__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_BasicSafetyMessage__regExtValue_PR;
typedef enum Reg_EventDescription__regExtValue_PR {
	Reg_EventDescription__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_EventDescription__regExtValue_PR;
typedef enum Reg_SupplementalVehicleExtensions__regExtValue_PR {
	Reg_SupplementalVehicleExtensions__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_SupplementalVehicleExtensions__regExtValue_PR;
typedef enum Reg_ComputedLane__regExtValue_PR {
	Reg_ComputedLane__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_ComputedLane__regExtValue_PR;
typedef enum Reg_LaneDataAttribute__regExtValue_PR {
	Reg_LaneDataAttribute__regExtValue_PR_NOTHING,	/* No components present */
	Reg_LaneDataAttribute__regExtValue_PR_LaneDataAttribute_addGrpB
} Reg_LaneDataAttribute__regExtValue_PR;
typedef enum Reg_NodeAttributeSetXY__regExtValue_PR {
	Reg_NodeAttributeSetXY__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_NodeAttributeSetXY__regExtValue_PR;
typedef enum Reg_NodeOffsetPointXY__regExtValue_PR {
	Reg_NodeOffsetPointXY__regExtValue_PR_NOTHING,	/* No components present */
	Reg_NodeOffsetPointXY__regExtValue_PR_NodeOffsetPointXY_addGrpB
} Reg_NodeOffsetPointXY__regExtValue_PR;
typedef enum Reg_Position3D__regExtValue_PR {
	Reg_Position3D__regExtValue_PR_NOTHING,	/* No components present */
	Reg_Position3D__regExtValue_PR_Position3D_addGrpB,
	Reg_Position3D__regExtValue_PR_Position3D_addGrpC
} Reg_Position3D__regExtValue_PR;
typedef enum Reg_RequestorType__regExtValue_PR {
	Reg_RequestorType__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_RequestorType__regExtValue_PR;
typedef enum Reg_VehicleClassification__regExtValue_PR {
	Reg_VehicleClassification__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_VehicleClassification__regExtValue_PR;
typedef enum Reg_VerticalOffset__regExtValue_PR {
	Reg_VerticalOffset__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_VerticalOffset__regExtValue_PR;
typedef enum Reg_CommonSafetyRequest__regExtValue_PR {
	Reg_CommonSafetyRequest__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_CommonSafetyRequest__regExtValue_PR;
typedef enum Reg_EmergencyVehicleAlert__regExtValue_PR {
	Reg_EmergencyVehicleAlert__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_EmergencyVehicleAlert__regExtValue_PR;
typedef enum Reg_IntersectionCollision__regExtValue_PR {
	Reg_IntersectionCollision__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_IntersectionCollision__regExtValue_PR;
typedef enum Reg_MapData__regExtValue_PR {
	Reg_MapData__regExtValue_PR_NOTHING,	/* No components present */
	Reg_MapData__regExtValue_PR_MapData_addGrpC
} Reg_MapData__regExtValue_PR;
typedef enum Reg_GenericLane__regExtValue_PR {
	Reg_GenericLane__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_GenericLane__regExtValue_PR;
typedef enum Reg_IntersectionGeometry__regExtValue_PR {
	Reg_IntersectionGeometry__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_IntersectionGeometry__regExtValue_PR;
typedef enum Reg_LaneAttributes__regExtValue_PR {
	Reg_LaneAttributes__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_LaneAttributes__regExtValue_PR;
typedef enum Reg_SignalControlZone__regExtValue_PR {
	Reg_SignalControlZone__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_SignalControlZone__regExtValue_PR;
typedef enum Reg_RestrictionUserType__regExtValue_PR {
	Reg_RestrictionUserType__regExtValue_PR_NOTHING,	/* No components present */
	Reg_RestrictionUserType__regExtValue_PR_RestrictionUserType_addGrpC
} Reg_RestrictionUserType__regExtValue_PR;
typedef enum Reg_RoadSegment__regExtValue_PR {
	Reg_RoadSegment__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_RoadSegment__regExtValue_PR;
typedef enum Reg_NMEAcorrections__regExtValue_PR {
	Reg_NMEAcorrections__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_NMEAcorrections__regExtValue_PR;
typedef enum Reg_PersonalSafetyMessage__regExtValue_PR {
	Reg_PersonalSafetyMessage__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_PersonalSafetyMessage__regExtValue_PR;
typedef enum Reg_ProbeDataManagement__regExtValue_PR {
	Reg_ProbeDataManagement__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_ProbeDataManagement__regExtValue_PR;
typedef enum Reg_ProbeVehicleData__regExtValue_PR {
	Reg_ProbeVehicleData__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_ProbeVehicleData__regExtValue_PR;
typedef enum Reg_RTCMcorrections__regExtValue_PR {
	Reg_RTCMcorrections__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_RTCMcorrections__regExtValue_PR;
typedef enum Reg_RoadSideAlert__regExtValue_PR {
	Reg_RoadSideAlert__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_RoadSideAlert__regExtValue_PR;
typedef enum Reg_SPAT__regExtValue_PR {
	Reg_SPAT__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_SPAT__regExtValue_PR;
typedef enum Reg_AdvisorySpeed__regExtValue_PR {
	Reg_AdvisorySpeed__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_AdvisorySpeed__regExtValue_PR;
typedef enum Reg_ConnectionManeuverAssist__regExtValue_PR {
	Reg_ConnectionManeuverAssist__regExtValue_PR_NOTHING,	/* No components present */
	Reg_ConnectionManeuverAssist__regExtValue_PR_ConnectionManeuverAssist_addGrpC
} Reg_ConnectionManeuverAssist__regExtValue_PR;
typedef enum Reg_IntersectionState__regExtValue_PR {
	Reg_IntersectionState__regExtValue_PR_NOTHING,	/* No components present */
	Reg_IntersectionState__regExtValue_PR_IntersectionState_addGrpC
} Reg_IntersectionState__regExtValue_PR;
typedef enum Reg_MovementEvent__regExtValue_PR {
	Reg_MovementEvent__regExtValue_PR_NOTHING,	/* No components present */
	Reg_MovementEvent__regExtValue_PR_MovementEvent_addGrpB
} Reg_MovementEvent__regExtValue_PR;
typedef enum Reg_MovementState__regExtValue_PR {
	Reg_MovementState__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_MovementState__regExtValue_PR;
typedef enum Reg_SignalRequestMessage__regExtValue_PR {
	Reg_SignalRequestMessage__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_SignalRequestMessage__regExtValue_PR;
typedef enum Reg_RequestorDescription__regExtValue_PR {
	Reg_RequestorDescription__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_RequestorDescription__regExtValue_PR;
typedef enum Reg_SignalRequestPackage__regExtValue_PR {
	Reg_SignalRequestPackage__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_SignalRequestPackage__regExtValue_PR;
typedef enum Reg_SignalRequest__regExtValue_PR {
	Reg_SignalRequest__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_SignalRequest__regExtValue_PR;
typedef enum Reg_SignalStatusMessage__regExtValue_PR {
	Reg_SignalStatusMessage__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_SignalStatusMessage__regExtValue_PR;
typedef enum Reg_SignalStatusPackage__regExtValue_PR {
	Reg_SignalStatusPackage__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_SignalStatusPackage__regExtValue_PR;
typedef enum Reg_SignalStatus__regExtValue_PR {
	Reg_SignalStatus__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_SignalStatus__regExtValue_PR;
typedef enum Reg_TestMessage00__regExtValue_PR {
	Reg_TestMessage00__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage00__regExtValue_PR;
typedef enum Reg_TestMessage01__regExtValue_PR {
	Reg_TestMessage01__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage01__regExtValue_PR;
typedef enum Reg_TestMessage02__regExtValue_PR {
	Reg_TestMessage02__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage02__regExtValue_PR;
typedef enum Reg_TestMessage03__regExtValue_PR {
	Reg_TestMessage03__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage03__regExtValue_PR;
typedef enum Reg_TestMessage04__regExtValue_PR {
	Reg_TestMessage04__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage04__regExtValue_PR;
typedef enum Reg_TestMessage05__regExtValue_PR {
	Reg_TestMessage05__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage05__regExtValue_PR;
typedef enum Reg_TestMessage06__regExtValue_PR {
	Reg_TestMessage06__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage06__regExtValue_PR;
typedef enum Reg_TestMessage07__regExtValue_PR {
	Reg_TestMessage07__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage07__regExtValue_PR;
typedef enum Reg_TestMessage08__regExtValue_PR {
	Reg_TestMessage08__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage08__regExtValue_PR;
typedef enum Reg_TestMessage09__regExtValue_PR {
	Reg_TestMessage09__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage09__regExtValue_PR;
typedef enum Reg_TestMessage10__regExtValue_PR {
	Reg_TestMessage10__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage10__regExtValue_PR;
typedef enum Reg_TestMessage11__regExtValue_PR {
	Reg_TestMessage11__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage11__regExtValue_PR;
typedef enum Reg_TestMessage12__regExtValue_PR {
	Reg_TestMessage12__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage12__regExtValue_PR;
typedef enum Reg_TestMessage13__regExtValue_PR {
	Reg_TestMessage13__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage13__regExtValue_PR;
typedef enum Reg_TestMessage14__regExtValue_PR {
	Reg_TestMessage14__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage14__regExtValue_PR;
typedef enum Reg_TestMessage15__regExtValue_PR {
	Reg_TestMessage15__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TestMessage15__regExtValue_PR;
typedef enum Reg_TravelerInformation__regExtValue_PR {
	Reg_TravelerInformation__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_TravelerInformation__regExtValue_PR;
typedef enum Reg_GeographicalPath__regExtValue_PR {
	Reg_GeographicalPath__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_GeographicalPath__regExtValue_PR;
typedef enum Reg_GeometricProjection__regExtValue_PR {
	Reg_GeometricProjection__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_GeometricProjection__regExtValue_PR;
typedef enum Reg_NodeAttributeSetLL__regExtValue_PR {
	Reg_NodeAttributeSetLL__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_NodeAttributeSetLL__regExtValue_PR;
typedef enum Reg_NodeOffsetPointLL__regExtValue_PR {
	Reg_NodeOffsetPointLL__regExtValue_PR_NOTHING	/* No components present */
	
} Reg_NodeOffsetPointLL__regExtValue_PR;

/* RegionalExtension */
typedef struct Reg_BasicSafetyMessage {
	RegionId_t	 regionId;
	struct Reg_BasicSafetyMessage__regExtValue {
		Reg_BasicSafetyMessage__regExtValue_PR present;
		union Reg_BasicSafetyMessage__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_BasicSafetyMessage_t;
typedef struct Reg_EventDescription {
	RegionId_t	 regionId;
	struct Reg_EventDescription__regExtValue {
		Reg_EventDescription__regExtValue_PR present;
		union Reg_EventDescription__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_EventDescription_t;
typedef struct Reg_SupplementalVehicleExtensions {
	RegionId_t	 regionId;
	struct Reg_SupplementalVehicleExtensions__regExtValue {
		Reg_SupplementalVehicleExtensions__regExtValue_PR present;
		union Reg_SupplementalVehicleExtensions__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_SupplementalVehicleExtensions_t;
typedef struct Reg_ComputedLane {
	RegionId_t	 regionId;
	struct Reg_ComputedLane__regExtValue {
		Reg_ComputedLane__regExtValue_PR present;
		union Reg_ComputedLane__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_ComputedLane_t;
typedef struct Reg_LaneDataAttribute {
	RegionId_t	 regionId;
	struct Reg_LaneDataAttribute__regExtValue {
		Reg_LaneDataAttribute__regExtValue_PR present;
		union Reg_LaneDataAttribute__regExtValue_u {
			LaneDataAttribute_addGrpB_t	 LaneDataAttribute_addGrpB;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_LaneDataAttribute_t;
typedef struct Reg_NodeAttributeSetXY {
	RegionId_t	 regionId;
	struct Reg_NodeAttributeSetXY__regExtValue {
		Reg_NodeAttributeSetXY__regExtValue_PR present;
		union Reg_NodeAttributeSetXY__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_NodeAttributeSetXY_t;
typedef struct Reg_NodeOffsetPointXY {
	RegionId_t	 regionId;
	struct Reg_NodeOffsetPointXY__regExtValue {
		Reg_NodeOffsetPointXY__regExtValue_PR present;
		union Reg_NodeOffsetPointXY__regExtValue_u {
			NodeOffsetPointXY_addGrpB_t	 NodeOffsetPointXY_addGrpB;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_NodeOffsetPointXY_t;
typedef struct Reg_Position3D {
	RegionId_t	 regionId;
	struct Reg_Position3D__regExtValue {
		Reg_Position3D__regExtValue_PR present;
		union Reg_Position3D__regExtValue_u {
			Position3D_addGrpB_t	 Position3D_addGrpB;
			Position3D_addGrpC_t	 Position3D_addGrpC;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_Position3D_t;
typedef struct Reg_RequestorType {
	RegionId_t	 regionId;
	struct Reg_RequestorType__regExtValue {
		Reg_RequestorType__regExtValue_PR present;
		union Reg_RequestorType__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_RequestorType_t;
typedef struct Reg_VehicleClassification {
	RegionId_t	 regionId;
	struct Reg_VehicleClassification__regExtValue {
		Reg_VehicleClassification__regExtValue_PR present;
		union Reg_VehicleClassification__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_VehicleClassification_t;
typedef struct Reg_VerticalOffset {
	RegionId_t	 regionId;
	struct Reg_VerticalOffset__regExtValue {
		Reg_VerticalOffset__regExtValue_PR present;
		union Reg_VerticalOffset__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_VerticalOffset_t;
typedef struct Reg_CommonSafetyRequest {
	RegionId_t	 regionId;
	struct Reg_CommonSafetyRequest__regExtValue {
		Reg_CommonSafetyRequest__regExtValue_PR present;
		union Reg_CommonSafetyRequest__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_CommonSafetyRequest_t;
typedef struct Reg_EmergencyVehicleAlert {
	RegionId_t	 regionId;
	struct Reg_EmergencyVehicleAlert__regExtValue {
		Reg_EmergencyVehicleAlert__regExtValue_PR present;
		union Reg_EmergencyVehicleAlert__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_EmergencyVehicleAlert_t;
typedef struct Reg_IntersectionCollision {
	RegionId_t	 regionId;
	struct Reg_IntersectionCollision__regExtValue {
		Reg_IntersectionCollision__regExtValue_PR present;
		union Reg_IntersectionCollision__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_IntersectionCollision_t;
typedef struct Reg_MapData {
	RegionId_t	 regionId;
	struct Reg_MapData__regExtValue {
		Reg_MapData__regExtValue_PR present;
		union Reg_MapData__regExtValue_u {
			MapData_addGrpC_t	 MapData_addGrpC;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_MapData_t;
typedef struct Reg_GenericLane {
	RegionId_t	 regionId;
	struct Reg_GenericLane__regExtValue {
		Reg_GenericLane__regExtValue_PR present;
		union Reg_GenericLane__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_GenericLane_t;
typedef struct Reg_IntersectionGeometry {
	RegionId_t	 regionId;
	struct Reg_IntersectionGeometry__regExtValue {
		Reg_IntersectionGeometry__regExtValue_PR present;
		union Reg_IntersectionGeometry__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_IntersectionGeometry_t;
typedef struct Reg_LaneAttributes {
	RegionId_t	 regionId;
	struct Reg_LaneAttributes__regExtValue {
		Reg_LaneAttributes__regExtValue_PR present;
		union Reg_LaneAttributes__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_LaneAttributes_t;
typedef struct Reg_SignalControlZone {
	RegionId_t	 regionId;
	struct Reg_SignalControlZone__regExtValue {
		Reg_SignalControlZone__regExtValue_PR present;
		union Reg_SignalControlZone__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_SignalControlZone_t;
typedef struct Reg_RestrictionUserType {
	RegionId_t	 regionId;
	struct Reg_RestrictionUserType__regExtValue {
		Reg_RestrictionUserType__regExtValue_PR present;
		union Reg_RestrictionUserType__regExtValue_u {
			RestrictionUserType_addGrpC_t	 RestrictionUserType_addGrpC;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_RestrictionUserType_t;
typedef struct Reg_RoadSegment {
	RegionId_t	 regionId;
	struct Reg_RoadSegment__regExtValue {
		Reg_RoadSegment__regExtValue_PR present;
		union Reg_RoadSegment__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_RoadSegment_t;
typedef struct Reg_NMEAcorrections {
	RegionId_t	 regionId;
	struct Reg_NMEAcorrections__regExtValue {
		Reg_NMEAcorrections__regExtValue_PR present;
		union Reg_NMEAcorrections__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_NMEAcorrections_t;
typedef struct Reg_PersonalSafetyMessage {
	RegionId_t	 regionId;
	struct Reg_PersonalSafetyMessage__regExtValue {
		Reg_PersonalSafetyMessage__regExtValue_PR present;
		union Reg_PersonalSafetyMessage__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_PersonalSafetyMessage_t;
typedef struct Reg_ProbeDataManagement {
	RegionId_t	 regionId;
	struct Reg_ProbeDataManagement__regExtValue {
		Reg_ProbeDataManagement__regExtValue_PR present;
		union Reg_ProbeDataManagement__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_ProbeDataManagement_t;
typedef struct Reg_ProbeVehicleData {
	RegionId_t	 regionId;
	struct Reg_ProbeVehicleData__regExtValue {
		Reg_ProbeVehicleData__regExtValue_PR present;
		union Reg_ProbeVehicleData__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_ProbeVehicleData_t;
typedef struct Reg_RTCMcorrections {
	RegionId_t	 regionId;
	struct Reg_RTCMcorrections__regExtValue {
		Reg_RTCMcorrections__regExtValue_PR present;
		union Reg_RTCMcorrections__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_RTCMcorrections_t;
typedef struct Reg_RoadSideAlert {
	RegionId_t	 regionId;
	struct Reg_RoadSideAlert__regExtValue {
		Reg_RoadSideAlert__regExtValue_PR present;
		union Reg_RoadSideAlert__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_RoadSideAlert_t;
typedef struct Reg_SPAT {
	RegionId_t	 regionId;
	struct Reg_SPAT__regExtValue {
		Reg_SPAT__regExtValue_PR present;
		union Reg_SPAT__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_SPAT_t;
typedef struct Reg_AdvisorySpeed {
	RegionId_t	 regionId;
	struct Reg_AdvisorySpeed__regExtValue {
		Reg_AdvisorySpeed__regExtValue_PR present;
		union Reg_AdvisorySpeed__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_AdvisorySpeed_t;
typedef struct Reg_ConnectionManeuverAssist {
	RegionId_t	 regionId;
	struct Reg_ConnectionManeuverAssist__regExtValue {
		Reg_ConnectionManeuverAssist__regExtValue_PR present;
		union Reg_ConnectionManeuverAssist__regExtValue_u {
			ConnectionManeuverAssist_addGrpC_t	 ConnectionManeuverAssist_addGrpC;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_ConnectionManeuverAssist_t;
typedef struct Reg_IntersectionState {
	RegionId_t	 regionId;
	struct Reg_IntersectionState__regExtValue {
		Reg_IntersectionState__regExtValue_PR present;
		union Reg_IntersectionState__regExtValue_u {
			IntersectionState_addGrpC_t	 IntersectionState_addGrpC;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_IntersectionState_t;
typedef struct Reg_MovementEvent {
	RegionId_t	 regionId;
	struct Reg_MovementEvent__regExtValue {
		Reg_MovementEvent__regExtValue_PR present;
		union Reg_MovementEvent__regExtValue_u {
			MovementEvent_addGrpB_t	 MovementEvent_addGrpB;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_MovementEvent_t;
typedef struct Reg_MovementState {
	RegionId_t	 regionId;
	struct Reg_MovementState__regExtValue {
		Reg_MovementState__regExtValue_PR present;
		union Reg_MovementState__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_MovementState_t;
typedef struct Reg_SignalRequestMessage {
	RegionId_t	 regionId;
	struct Reg_SignalRequestMessage__regExtValue {
		Reg_SignalRequestMessage__regExtValue_PR present;
		union Reg_SignalRequestMessage__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_SignalRequestMessage_t;
typedef struct Reg_RequestorDescription {
	RegionId_t	 regionId;
	struct Reg_RequestorDescription__regExtValue {
		Reg_RequestorDescription__regExtValue_PR present;
		union Reg_RequestorDescription__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_RequestorDescription_t;
typedef struct Reg_SignalRequestPackage {
	RegionId_t	 regionId;
	struct Reg_SignalRequestPackage__regExtValue {
		Reg_SignalRequestPackage__regExtValue_PR present;
		union Reg_SignalRequestPackage__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_SignalRequestPackage_t;
typedef struct Reg_SignalRequest {
	RegionId_t	 regionId;
	struct Reg_SignalRequest__regExtValue {
		Reg_SignalRequest__regExtValue_PR present;
		union Reg_SignalRequest__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_SignalRequest_t;
typedef struct Reg_SignalStatusMessage {
	RegionId_t	 regionId;
	struct Reg_SignalStatusMessage__regExtValue {
		Reg_SignalStatusMessage__regExtValue_PR present;
		union Reg_SignalStatusMessage__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_SignalStatusMessage_t;
typedef struct Reg_SignalStatusPackage {
	RegionId_t	 regionId;
	struct Reg_SignalStatusPackage__regExtValue {
		Reg_SignalStatusPackage__regExtValue_PR present;
		union Reg_SignalStatusPackage__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_SignalStatusPackage_t;
typedef struct Reg_SignalStatus {
	RegionId_t	 regionId;
	struct Reg_SignalStatus__regExtValue {
		Reg_SignalStatus__regExtValue_PR present;
		union Reg_SignalStatus__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_SignalStatus_t;
typedef struct Reg_TestMessage00 {
	RegionId_t	 regionId;
	struct Reg_TestMessage00__regExtValue {
		Reg_TestMessage00__regExtValue_PR present;
		union Reg_TestMessage00__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage00_t;
typedef struct Reg_TestMessage01 {
	RegionId_t	 regionId;
	struct Reg_TestMessage01__regExtValue {
		Reg_TestMessage01__regExtValue_PR present;
		union Reg_TestMessage01__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage01_t;
typedef struct Reg_TestMessage02 {
	RegionId_t	 regionId;
	struct Reg_TestMessage02__regExtValue {
		Reg_TestMessage02__regExtValue_PR present;
		union Reg_TestMessage02__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage02_t;
typedef struct Reg_TestMessage03 {
	RegionId_t	 regionId;
	struct Reg_TestMessage03__regExtValue {
		Reg_TestMessage03__regExtValue_PR present;
		union Reg_TestMessage03__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage03_t;
typedef struct Reg_TestMessage04 {
	RegionId_t	 regionId;
	struct Reg_TestMessage04__regExtValue {
		Reg_TestMessage04__regExtValue_PR present;
		union Reg_TestMessage04__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage04_t;
typedef struct Reg_TestMessage05 {
	RegionId_t	 regionId;
	struct Reg_TestMessage05__regExtValue {
		Reg_TestMessage05__regExtValue_PR present;
		union Reg_TestMessage05__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage05_t;
typedef struct Reg_TestMessage06 {
	RegionId_t	 regionId;
	struct Reg_TestMessage06__regExtValue {
		Reg_TestMessage06__regExtValue_PR present;
		union Reg_TestMessage06__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage06_t;
typedef struct Reg_TestMessage07 {
	RegionId_t	 regionId;
	struct Reg_TestMessage07__regExtValue {
		Reg_TestMessage07__regExtValue_PR present;
		union Reg_TestMessage07__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage07_t;
typedef struct Reg_TestMessage08 {
	RegionId_t	 regionId;
	struct Reg_TestMessage08__regExtValue {
		Reg_TestMessage08__regExtValue_PR present;
		union Reg_TestMessage08__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage08_t;
typedef struct Reg_TestMessage09 {
	RegionId_t	 regionId;
	struct Reg_TestMessage09__regExtValue {
		Reg_TestMessage09__regExtValue_PR present;
		union Reg_TestMessage09__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage09_t;
typedef struct Reg_TestMessage10 {
	RegionId_t	 regionId;
	struct Reg_TestMessage10__regExtValue {
		Reg_TestMessage10__regExtValue_PR present;
		union Reg_TestMessage10__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage10_t;
typedef struct Reg_TestMessage11 {
	RegionId_t	 regionId;
	struct Reg_TestMessage11__regExtValue {
		Reg_TestMessage11__regExtValue_PR present;
		union Reg_TestMessage11__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage11_t;
typedef struct Reg_TestMessage12 {
	RegionId_t	 regionId;
	struct Reg_TestMessage12__regExtValue {
		Reg_TestMessage12__regExtValue_PR present;
		union Reg_TestMessage12__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage12_t;
typedef struct Reg_TestMessage13 {
	RegionId_t	 regionId;
	struct Reg_TestMessage13__regExtValue {
		Reg_TestMessage13__regExtValue_PR present;
		union Reg_TestMessage13__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage13_t;
typedef struct Reg_TestMessage14 {
	RegionId_t	 regionId;
	struct Reg_TestMessage14__regExtValue {
		Reg_TestMessage14__regExtValue_PR present;
		union Reg_TestMessage14__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage14_t;
typedef struct Reg_TestMessage15 {
	RegionId_t	 regionId;
	struct Reg_TestMessage15__regExtValue {
		Reg_TestMessage15__regExtValue_PR present;
		union Reg_TestMessage15__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TestMessage15_t;
typedef struct Reg_TravelerInformation {
	RegionId_t	 regionId;
	struct Reg_TravelerInformation__regExtValue {
		Reg_TravelerInformation__regExtValue_PR present;
		union Reg_TravelerInformation__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_TravelerInformation_t;
typedef struct Reg_GeographicalPath {
	RegionId_t	 regionId;
	struct Reg_GeographicalPath__regExtValue {
		Reg_GeographicalPath__regExtValue_PR present;
		union Reg_GeographicalPath__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_GeographicalPath_t;
typedef struct Reg_GeometricProjection {
	RegionId_t	 regionId;
	struct Reg_GeometricProjection__regExtValue {
		Reg_GeometricProjection__regExtValue_PR present;
		union Reg_GeometricProjection__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_GeometricProjection_t;
typedef struct Reg_NodeAttributeSetLL {
	RegionId_t	 regionId;
	struct Reg_NodeAttributeSetLL__regExtValue {
		Reg_NodeAttributeSetLL__regExtValue_PR present;
		union Reg_NodeAttributeSetLL__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_NodeAttributeSetLL_t;
typedef struct Reg_NodeOffsetPointLL {
	RegionId_t	 regionId;
	struct Reg_NodeOffsetPointLL__regExtValue {
		Reg_NodeOffsetPointLL__regExtValue_PR present;
		union Reg_NodeOffsetPointLL__regExtValue_u {
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} regExtValue;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Reg_NodeOffsetPointLL_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_Reg_BasicSafetyMessage;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_BasicSafetyMessage_specs_1;
extern asn_TYPE_member_t asn_MBR_Reg_BasicSafetyMessage_1[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_EventDescription;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_EventDescription_specs_4;
extern asn_TYPE_member_t asn_MBR_Reg_EventDescription_4[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_SupplementalVehicleExtensions;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_SupplementalVehicleExtensions_specs_7;
extern asn_TYPE_member_t asn_MBR_Reg_SupplementalVehicleExtensions_7[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_ComputedLane;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_ComputedLane_specs_10;
extern asn_TYPE_member_t asn_MBR_Reg_ComputedLane_10[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_LaneDataAttribute;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_LaneDataAttribute_specs_13;
extern asn_TYPE_member_t asn_MBR_Reg_LaneDataAttribute_13[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_NodeAttributeSetXY;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_NodeAttributeSetXY_specs_16;
extern asn_TYPE_member_t asn_MBR_Reg_NodeAttributeSetXY_16[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_NodeOffsetPointXY;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_NodeOffsetPointXY_specs_19;
extern asn_TYPE_member_t asn_MBR_Reg_NodeOffsetPointXY_19[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_Position3D;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_Position3D_specs_22;
extern asn_TYPE_member_t asn_MBR_Reg_Position3D_22[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_RequestorType;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_RequestorType_specs_25;
extern asn_TYPE_member_t asn_MBR_Reg_RequestorType_25[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_VehicleClassification;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_VehicleClassification_specs_28;
extern asn_TYPE_member_t asn_MBR_Reg_VehicleClassification_28[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_VerticalOffset;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_VerticalOffset_specs_31;
extern asn_TYPE_member_t asn_MBR_Reg_VerticalOffset_31[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_CommonSafetyRequest;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_CommonSafetyRequest_specs_34;
extern asn_TYPE_member_t asn_MBR_Reg_CommonSafetyRequest_34[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_EmergencyVehicleAlert;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_EmergencyVehicleAlert_specs_37;
extern asn_TYPE_member_t asn_MBR_Reg_EmergencyVehicleAlert_37[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_IntersectionCollision;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_IntersectionCollision_specs_40;
extern asn_TYPE_member_t asn_MBR_Reg_IntersectionCollision_40[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_MapData;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_MapData_specs_43;
extern asn_TYPE_member_t asn_MBR_Reg_MapData_43[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_GenericLane;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_GenericLane_specs_46;
extern asn_TYPE_member_t asn_MBR_Reg_GenericLane_46[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_IntersectionGeometry;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_IntersectionGeometry_specs_49;
extern asn_TYPE_member_t asn_MBR_Reg_IntersectionGeometry_49[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_LaneAttributes;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_LaneAttributes_specs_52;
extern asn_TYPE_member_t asn_MBR_Reg_LaneAttributes_52[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_SignalControlZone;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_SignalControlZone_specs_55;
extern asn_TYPE_member_t asn_MBR_Reg_SignalControlZone_55[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_RestrictionUserType;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_RestrictionUserType_specs_58;
extern asn_TYPE_member_t asn_MBR_Reg_RestrictionUserType_58[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_RoadSegment;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_RoadSegment_specs_61;
extern asn_TYPE_member_t asn_MBR_Reg_RoadSegment_61[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_NMEAcorrections;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_NMEAcorrections_specs_64;
extern asn_TYPE_member_t asn_MBR_Reg_NMEAcorrections_64[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_PersonalSafetyMessage;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_PersonalSafetyMessage_specs_67;
extern asn_TYPE_member_t asn_MBR_Reg_PersonalSafetyMessage_67[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_ProbeDataManagement;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_ProbeDataManagement_specs_70;
extern asn_TYPE_member_t asn_MBR_Reg_ProbeDataManagement_70[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_ProbeVehicleData;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_ProbeVehicleData_specs_73;
extern asn_TYPE_member_t asn_MBR_Reg_ProbeVehicleData_73[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_RTCMcorrections;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_RTCMcorrections_specs_76;
extern asn_TYPE_member_t asn_MBR_Reg_RTCMcorrections_76[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_RoadSideAlert;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_RoadSideAlert_specs_79;
extern asn_TYPE_member_t asn_MBR_Reg_RoadSideAlert_79[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_SPAT;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_SPAT_specs_82;
extern asn_TYPE_member_t asn_MBR_Reg_SPAT_82[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_AdvisorySpeed;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_AdvisorySpeed_specs_85;
extern asn_TYPE_member_t asn_MBR_Reg_AdvisorySpeed_85[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_ConnectionManeuverAssist;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_ConnectionManeuverAssist_specs_88;
extern asn_TYPE_member_t asn_MBR_Reg_ConnectionManeuverAssist_88[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_IntersectionState;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_IntersectionState_specs_91;
extern asn_TYPE_member_t asn_MBR_Reg_IntersectionState_91[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_MovementEvent;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_MovementEvent_specs_94;
extern asn_TYPE_member_t asn_MBR_Reg_MovementEvent_94[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_MovementState;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_MovementState_specs_97;
extern asn_TYPE_member_t asn_MBR_Reg_MovementState_97[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_SignalRequestMessage;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_SignalRequestMessage_specs_100;
extern asn_TYPE_member_t asn_MBR_Reg_SignalRequestMessage_100[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_RequestorDescription;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_RequestorDescription_specs_103;
extern asn_TYPE_member_t asn_MBR_Reg_RequestorDescription_103[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_SignalRequestPackage;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_SignalRequestPackage_specs_106;
extern asn_TYPE_member_t asn_MBR_Reg_SignalRequestPackage_106[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_SignalRequest;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_SignalRequest_specs_109;
extern asn_TYPE_member_t asn_MBR_Reg_SignalRequest_109[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_SignalStatusMessage;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_SignalStatusMessage_specs_112;
extern asn_TYPE_member_t asn_MBR_Reg_SignalStatusMessage_112[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_SignalStatusPackage;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_SignalStatusPackage_specs_115;
extern asn_TYPE_member_t asn_MBR_Reg_SignalStatusPackage_115[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_SignalStatus;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_SignalStatus_specs_118;
extern asn_TYPE_member_t asn_MBR_Reg_SignalStatus_118[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage00;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage00_specs_121;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage00_121[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage01;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage01_specs_124;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage01_124[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage02;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage02_specs_127;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage02_127[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage03;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage03_specs_130;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage03_130[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage04;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage04_specs_133;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage04_133[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage05;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage05_specs_136;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage05_136[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage06;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage06_specs_139;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage06_139[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage07;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage07_specs_142;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage07_142[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage08;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage08_specs_145;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage08_145[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage09;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage09_specs_148;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage09_148[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage10;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage10_specs_151;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage10_151[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage11;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage11_specs_154;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage11_154[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage12;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage12_specs_157;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage12_157[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage13;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage13_specs_160;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage13_160[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage14;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage14_specs_163;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage14_163[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TestMessage15;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TestMessage15_specs_166;
extern asn_TYPE_member_t asn_MBR_Reg_TestMessage15_166[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_TravelerInformation;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_TravelerInformation_specs_169;
extern asn_TYPE_member_t asn_MBR_Reg_TravelerInformation_169[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_GeographicalPath;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_GeographicalPath_specs_172;
extern asn_TYPE_member_t asn_MBR_Reg_GeographicalPath_172[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_GeometricProjection;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_GeometricProjection_specs_175;
extern asn_TYPE_member_t asn_MBR_Reg_GeometricProjection_175[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_NodeAttributeSetLL;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_NodeAttributeSetLL_specs_178;
extern asn_TYPE_member_t asn_MBR_Reg_NodeAttributeSetLL_178[2];
extern asn_TYPE_descriptor_t asn_DEF_Reg_NodeOffsetPointLL;
extern asn_SEQUENCE_specifics_t asn_SPC_Reg_NodeOffsetPointLL_specs_181;
extern asn_TYPE_member_t asn_MBR_Reg_NodeOffsetPointLL_181[2];

#ifdef __cplusplus
}
#endif

#endif	/* _RegionalExtension_H_ */
#include "asn_internal.h"
